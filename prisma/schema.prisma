generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://u198138147_crd_project:CRD_test_db1@185.229.112.3/u198138147_crd_project"
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?   @db.VarChar(255)
  image         String?
  user_type     Int       @default(3)
  is_archived   Boolean   @default(dbgenerated("(b'0')")) @db.Bit(1)
  gender        String?   @db.VarChar(255)
  student_level String?   @db.VarChar(255)
  birthday      DateTime? @db.Date
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model category_tbl {
  category_id       Int                 @id @default(autoincrement())
  category_name     String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(0)
  free_standing_tbl free_standing_tbl[]
}

model course_tbl {
  course_id                  Int                          @id @default(autoincrement())
  course_type                course_tbl_course_type
  created_at                 DateTime                     @default(now()) @db.Timestamp(0)
  free_standing_tbl          free_standing_tbl[]
  specialization_details_tbl specialization_details_tbl[]
}

model free_standing_tbl {
  id                       Int          @id @default(autoincrement())
  category_id              Int
  course_id                Int
  title                    String       @db.VarChar(255)
  summary                  String       @db.VarChar(255)
  student_level            String       @db.VarChar(255)
  student_skill            String       @db.VarChar(255)
  logo                     String       @db.VarChar(255)
  preview                  String       @db.VarChar(255)
  category_tbl_category_id Int
  category_tbl             category_tbl @relation(fields: [category_id], references: [category_id])
  course_tbl               course_tbl   @relation(fields: [course_id], references: [course_id])

  @@index([category_id], name: "free_standing_tbl_category_tbl")
  @@index([course_id], name: "free_standing_tbl_course_tbl")
}

model specialization_course_tbl {
  id                         Int                                @id @default(autoincrement())
  specialization_id          Int
  student_level              Int
  type                       specialization_course_tbl_type
  duration                   specialization_course_tbl_duration
  list_overview              String                             @db.VarChar(255)
  times_taken                Int
  tags                       String                             @db.VarChar(255)
  created_at                 DateTime                           @default(now()) @db.Timestamp(0)
  specialization_details_tbl specialization_details_tbl         @relation(fields: [specialization_id], references: [id])

  @@index([specialization_id], name: "specialization_course_tbl_specialization_details_tbl")
}

model specialization_details_tbl {
  id                        Int                                       @id @default(autoincrement())
  course_id                 Int
  title                     String                                    @db.VarChar(255)
  summary                   String                                    @db.VarChar(255)
  student_level             String                                    @db.VarChar(255)
  student_skill             String                                    @db.VarChar(255)
  list_overview             String?                                   @db.VarChar(255)
  specialization_tags       String?                                   @db.VarChar(255)
  timeline_type             specialization_details_tbl_timeline_type?
  logo                      String                                    @db.VarChar(255)
  preview                   String                                    @db.VarChar(255)
  is_archived               Boolean                                   @db.Bit(1)
  course_tbl                course_tbl                                @relation(fields: [course_id], references: [course_id])
  specialization_course_tbl specialization_course_tbl[]

  @@index([course_id], name: "specialization_details_tbl_course_tbl")
}

enum course_tbl_course_type {
  free_standing @map("free-standing")
  specialization
}

enum specialization_course_tbl_type {
  specialization
  free_standing @map("free-standing")
}

enum specialization_course_tbl_duration {
  weekly
  custom
}

enum specialization_details_tbl_timeline_type {
  self_paced @map("self-paced")
  time_locked @map("time-locked")
  continuous
}
